<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MathRacer</title>
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/main.css">
    <script src="/js/bootstrap.min.js"></script>
</head>

<body>
    <h1>Math Racer</h1>
    <div id="lobby">
        <h2>Welcome, <%= username %>
        </h2>
        <div class="center">
            <button id="joinMatchBtn" type="button" class="btn btn-outline-light">Join Public
                Match</button>
        </div>
        <div id="stats" class=" w-25 mx-auto" style="margin-top: 30px;">
            <h3>Your Stats</h3>
            <p>Rating: <%= rating %>
            </p>
            <!-- <p>Win Rate: 0/0 (0%)</p> -->
            <!-- <p>Record: 120</p> -->
        </div>
    </div>

    <div id="waiting" style="display: none;">
        <h2>Waiting for players...</h2>
    </div>

    <div id="match" style="display: none;">
        <div class="center">
            <h2 id="gameTitle"></h2>
            <p id="time"></p>
        </div>
        <div id="gamePanel" class="row border boder-1 border-light">
            <div class="playerPanel col border-end border-1 border-light">
                <p id="user1"></p>
                <p id="score1">0</p>
                <h2 id="question1"></h2>
                <input id="inputText" type="text" disabled>
            </div>

            <div class="playerPanel col border-start border-1 border-light">
                <p id="user2"></p>
                <p id="score2">0</p>
                <h2 id="question2"></h2>
            </div>
        </div>

    </div>

    <div id="gameover" style="display: none;">
        <h2 id="resultText"></h2>
        <div class="center">
            <p id="oldRating"></p>
            <p id="newRating"></p>
            <form action="/main">
                <button type="submit" id="returnBtn">Return</button>
            </form>
        </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        socket.emit('username', "<%= username %>");

        const getElem = (id) => document.getElementById(id);
        const joinMatchBtn = getElem('joinMatchBtn');
        joinMatchBtn.addEventListener('click', (event) => {
            socket.emit('joinMatch');
        })


        const waiting = getElem('waiting');
        const lobby = getElem('lobby');
        const match = getElem('match');
        const title = getElem('gameTitle');
        const time = getElem('time');
        const gameover = getElem('gameover');
        const returnBtn = getElem('returnBtn');
        const q1 = getElem('question1');
        const q2 = getElem('question2');
        const input = getElem('inputText');
        const newRatingText = getElem('newRating');
        const oldRatingText = getElem('oldRating');
        const score1 = getElem('score1');
        const score2 = getElem('score2');
        const resultText = getElem('resultText');

        let currProblem = null;
        socket.on('waiting', () => {
            waiting.style.display = 'block';
            lobby.style.display = 'none';
        });

        socket.on('inGame', ({ user1, user2 }) => {
            waiting.style.display = 'none';
            lobby.style.display = 'none';
            title.innerText = `${user1} vs. ${user2}`;
            match.style.display = 'block';
            document.getElementById('user1').innerText = user1;
            document.getElementById('user2').innerText = user2;
        });
        socket.on('countdown', (t) => {
            time.innerText = `Starting Match in: ${t}`;
        });
        socket.on('timeLeft', (t) => {
            time.innerText = `${t}`;
        })
        socket.on('newProblemMe', (problem) => {
            input.disabled = false;
            input.focus();
            input.value = "";
            currProblem = problem;
            q1.innerText = problem.statement;
        })
        socket.on('newProblemThem', (problem) => {
            q2.innerText = problem.statement;
        })
        socket.on('updateMyScore', score => {
            score1.innerText = score;
        })
        socket.on('updateTheirScore', score => {
            score2.innerText = score;
        })

        function displayResult(oldRating, newRating, text) {
            match.style.display = 'none';
            oldRatingText.innerText = `Old Rating: ${oldRating}`;
            newRatingText.innerText = `New Rating: ${newRating}`;
            resultText.innerText = text;
            gameover.style.display = 'block';
        }
        socket.on('opponentDisconnected', ({ oldRating, newRating }) => {
            displayResult(oldRating, newRating, 'Opponent disconnected.');
        });
        socket.on('victory', ({oldRating, newRating}) => {
            displayResult(oldRating, newRating, 'VICTORY');
        })
        socket.on('loss', ({oldRating, newRating}) => {
            displayResult(oldRating, newRating, 'LOSS');
        })
        returnBtn.addEventListener('click', (event) => {
            opponentDisconnected.style.display = 'none';
            lobby.style.display = 'block';
        });
        input.addEventListener('input', (_) => {
            if (input.value == currProblem.answer) {
                socket.emit('problemSolved', currProblem);
            }
        })
        socket.on('disableInput', () => {
            input.disabled = true;
        });


    </script>
</body>

</html>